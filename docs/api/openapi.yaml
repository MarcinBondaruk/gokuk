openapi: 3.1.0
info:
  title: GoKuK API
  description: Personal meal planner and shopping helper
  version: 0.0.0
servers:
  - url: http://gokuk.bendit.dev
    description: Public instance
paths:
  /api/v1/users:
    post:
      summary: Create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '400':
          description: Application was unabled to create new user with given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/users/:id:
    get:
      summary: Get user with id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: JSON representing single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '404':
          description: User with given id does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/recipes:
    get:
      summary: Returns a list of recipes.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
          description: Record per page
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipeResponse"
    post:
      summary: Create new recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeRequest"
      responses:
        '201':
          description: Recipe created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipeResponse"
        '400':
          description: Application was unabled to create new recipe with given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/recipes/shopping-list:
    post:
      summary: Generate shopping list from recipes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '201':
          description: Shopping list based on list of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShoppingListResponse"
  /api/v1/recipes/{recipeId}:
    get:
      summary: Get recipe with recipeId
      parameters:
        - name: recipeId
          in: path
          required: true
          description: Id of a recipe
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: JSON representing single recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipeResponse"

        '404':
          description: Recipe with given id does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/meal-plans:
    post:
      summary: Create new meal plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MealPlanRequest"
      responses:
        '201':
          description: Meal plan created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MealPlanResponse"
        '400':
          description: Application was unabled to create new Meal Plan with given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/meal-plans/{mealPlanId}/shopping-list:
    get:
      summary: Returns shopping list based on meal plan
      parameters:
        - name: mealPlanId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShoppingListResponse"
        '404':
          description: No mealplan of given id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/products:
    get:
      summary: Returns products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
          description: Record per page
      responses:
        '200':
          description: Available products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductResponse"
  /api/v1/products/bulk-add:
    post:
      summary: Add multiple products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductRequest"
      responses:
        '201':
          description: Products added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductsBulkAddResponse"
        '400':
          description: Application was unabled to add new products with given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          format: uuid
        message:
          type: string
    Ingredient:
      type: object
      required:
        - productId
        - quantity
        - unit
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
        unit:
          type: string
    RecipeRequest:
      type: object
      required:
        - title
        - ingredients
        - description
      properties:
        title:
          type: string
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        description:
          type: string
    RecipeResponse:
      type: object
      required:
        - id
        - title
        - ingredients
        - description
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        description:
          type: string
    MealPlanRequest:
      type: object
      required:
        - id
        - recipeIds
      properties:
        id:
          type: string
          format: uuid
        recipeIds:
          type: array
          items:
            type: string
            format: uuid
    MealPlanResponse:
      type: object
      required:
        - id
        - recipeIds
      properties:
        id:
          type: string
          format: uuid
        recipeIds:
          type: array
          items:
            type: string
            format: uuid
    ProductRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
    ProductResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
    ProductsBulkAddResponse:
      type: object
      properties:
        productsAdded:
          type: integer
        productIds:
          type: array
          items:
            type: string
            format: uuid
    ShoppingListResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductResponse"
    UserRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserResponse:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string

