openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /api/v1/recipes:
    get:
      summary: Returns a list of recipes.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
    post:
      summary: Create new recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipe"
      responses:
        '201':
          description: Recipe created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        '400':
          description: Application was unabled to create new recipe with given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/recipes/shopping-list:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Returns shopping list based on list of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /api/v1/recipes/{recipeId}:
    get:
      summary: Get recipe with recipeId
      parameters:
        - name: recipeId
          in: path
          required: true
          description: Id of a recipe
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: JSON representing single recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"

        '404':
          description: Recipe with given id does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/meal-plans:
    post:
      description: Create new meal plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/MealPlan"
      responses:
        '201':
          description: Meal plan created
          content:
            application/json:
              schema:
                $ref: "#components/schemas/MealPlan"
        '400':
          description: Application was unabled to create new Meal Plan with given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/meal-plans/{mealPlanId}/shopping-list:
    get:
      description: Returns shopping list based on meal plan
      parameters:
        - name: mealPlanId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        '404':
          description: No mealplan of given id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          format: uuid
        message:
          type: string
    Ingredient:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        amout:
          type: integer
        unit:
          type: string
    Recipe:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        description:
          type: string
    MealPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
        recipeIds:
          type: array
          items:
            type: string
            format: uuid
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        producer:
          type: string
    ShoppingList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"

